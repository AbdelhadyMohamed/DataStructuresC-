#include <iostream>
using namespace std;
class Node {
public:
    int data;
    Node* next;
    Node()
    {
    data = 0;
    next = NULL;
    }

};
class Queue {
public:
    Node* front;
    Node* rear;
    Queue()
    {
        front=rear = NULL;      
    }
    bool isEmpty() {
        if (front == rear == NULL) 
            return true;
        
        else return false;
    }
    
    void enqueue(int item) {
        Node* newNode=new Node();
        newNode->data = item;
       if(isEmpty()) 
       {
         
        front = rear=newNode;
        
        }
       else {
           rear->next = newNode;
           rear =newNode;

       }
    
    }
    void display() {
        if (isEmpty())
        {
            cout << "queue is empty";
        }
        else {
            {
                Node* temp = front;
                while (temp != NULL) {
                    cout << temp->data;
                    temp = temp->next;
                }
                cout << endl;
            }
        }
    }
    void dequeue() {
        if (isEmpty()) {
            cout << "queue is empty" << endl;

        }
        else if (front == rear) {
            delete front;
            front = rear = NULL;
            cout << "item deleted" << endl;
        }
        else {
            int deletedValue;
            Node* delPtr = front;
            deletedValue = delPtr->data;
            front = front->next;
            delete delPtr;
            cout << "item deleted with value " << deletedValue<<endl;


        }
    }
    int getFront() {
        if (isEmpty()) {
            cout << "queue is empty" << endl;
            return 0;

        }
        else {
            return front->data;
        }
    }
    int getRear() {
        if (isEmpty()) {
            cout << "queue is empty" << endl;
            return 0;

        }
        else {
            return rear->data;
        }
    }
    int count() {
        int counter = 0;
        Node* temp = front;
        while (temp != NULL) {
            counter++;
            temp = temp->next;
        }
        return counter;
    }
    bool isFound(int item) {
        Node* temp = front;
        while (temp != NULL) {
            if (temp->data == item)
                return true;
            temp = temp->next;
        }
        return false;
    }
    void clear() {
        while (!isEmpty) {
            dequeue();
        }
        cout << "queue items cleared" << endl;
    }
};
int main()
{
    cout << "Hello World!\n";
}

